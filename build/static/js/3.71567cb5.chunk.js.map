{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","setIsEntering","authorInputRef","useRef","textInputRef","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","navigate","useNavigate","useEffect","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,mB,qBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,2B,0FCKtHC,EAJF,SAAAC,GACX,OAAO,qBAAKC,UAAWC,IAAQC,KAAK,SAAEH,EAAMI,UAC9C,E,yBCoEeC,EAjEG,SAAAL,GAChB,MAAoCM,oBAAS,GAAM,mBAAhCC,GAAF,KAAe,MAE1BC,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACE,cAAC,WAAQ,UAQP,cAAC,EAAI,UACH,uBACEE,QAfmB,WACzBJ,GAAc,EAChB,EAcQN,UAAWC,IAAQU,KACnBC,SAhCR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBR,EAAeS,QAAQC,MACvCC,EAAcT,EAAaO,QAAQC,MAIzClB,EAAMoB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAuBoC,UAE3BnB,EAAMuB,WACL,qBAAKtB,UAAWC,IAAQsB,QAAQ,SAC9B,cAACC,EAAA,EAAc,MAInB,sBAAKxB,UAAWC,IAAQwB,QAAQ,UAC9B,uBAAOC,QAAQ,SAAQ,oBACvB,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKtB,OAEtC,sBAAKP,UAAWC,IAAQwB,QAAQ,UAC9B,uBAAOC,QAAQ,OAAM,kBACrB,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKpB,OAEpC,qBAAKT,UAAWC,IAAQ8B,QAAQ,SAC9B,wBAAQC,QAtCY,WAC5B1B,GAAc,EAChB,EAoCkDN,UAAU,MAAK,+BAQnE,E,gBC5CeiC,UAnBE,WACf,MAAgCC,YAAQC,KAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACfC,EAAWC,cAEjBC,qBAAU,WACO,cAAXH,GACFC,EAAS,UAEb,GAAG,CAACD,EAAQC,IAMZ,OACE,cAAC,EAAS,CAAChB,UAAsB,YAAXe,EAAsBlB,WALtB,SAAAsB,GACtBL,EAAYK,EACd,GAKF,C","file":"static/js/3.71567cb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2xeCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3jRXJ\",\"loading\":\"QuoteForm_loading__3BLKq\",\"control\":\"QuoteForm_control__1zoS5\",\"actions\":\"QuoteForm_actions__2xvN-\"};","import classes from './Card.module.css';\n\nconst Card = props => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\n// import { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = props => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <Fragment>\n      {/* Prompt is currently not supported yet by v6 */}\n      {/* <Prompt\n        when={isEntering}\n        message={(location) =>\n          'Are you sure you want to leave? All your entered data will be lost!'\n        }\n      /> */}\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed') {\r\n      navigate('/quotes');\r\n    }\r\n  }, [status, navigate]);\r\n\r\n  const addQuoteHandler = quoteData => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}